apiVersion: apps/v1
kind: Deployment
metadata:
 name: <PROJECT_NAME>
 namespace: staging
 labels:
   app: <PROJECT_NAME> #create deployment with label name
   commit-hash: "<VERSION>"
spec:
 replicas: 1
 selector:
   matchLabels:
     app: <PROJECT_NAME>-pods #target pods with this label
 template:
   metadata:
     labels:
       app: <PROJECT_NAME>-pods #create pods with label name
   spec:
     containers:
       - name: <PROJECT_NAME>-cont
         image: <IMAGE_NAME>
         imagePullPolicy: Always
         ports:
           - containerPort: <PORT>  
---
apiVersion: v1
kind: Service
metadata:
  name: <PROJECT_NAME>
  namespace: staging
  labels:
   app: <PROJECT_NAME> #create services with label name
   commit-hash: "<VERSION>"
spec:
  selector:
    app: <PROJECT_NAME>-pods #targeting service name
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: <PORT>
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <PROJECT_NAME>
  namespace: staging
  annotations:
    alb.ingress.kubernetes.io/load-balancer-attributes: "routing.http2.enabled=true"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0f5c02d65d75a1de9, subnet-0691a7915fe727aaf
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:302546992452:certificate/34b9610b-e100-4b40-a6c0-d8e8fb8e2f5e"
    alb.ingress.kubernetes.io/backend-protocol: "HTTP"
    alb.ingress.kubernetes.io/redirect-to-https: "true"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/healthcheck-port: "traffic-port"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/success-codes: "200,401"
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/group.name: backstage-catalog
spec:
  ingressClassName: alb
  rules:
    - host: <PROJECT_NAME>-staging.glair.id
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: <PROJECT_NAME>
                port:
                  number: 80